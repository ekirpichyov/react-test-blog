{"version":3,"sources":["components/HandleArticle.js","actions/validate.js","components/Article.js","components/ArticleList.js","actions/checkData.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["HandleArticle","props","data","key","value","_useState","useState","head","_useState2","Object","slicedToArray","setHead","_useState3","brief","_useState4","setBrief","_useState5","content","_useState6","setContent","_useState7","_useState8","disabled","setDisabled","useEffect","length","validateArticle","handleChange","e","target","name","handleKeyPress","preventDefault","react_default","a","createElement","className","onClick","close","id","minLength","maxLength","cols","rows","placeholder","onChange","onKeyPress","publicate","comments","Article","editPost","setEditPost","author","setAuthor","text","setText","comment","validateComment","removeComment","newComments","filter","el","StyledComments","styled","_ref","children","_templateObject","style","opacity","Fragment","selector","remover","react_motion","willEnter","willLeave","spring","styles","map","item","interpolatedStyles","config","onSubmit","Date","now","push","type","src_components_HandleArticle","ArticleList","loadPostsCount","setLoadPostsCount","slice","loadPostsData","setLoadPostsData","handleNext","setTimeout","StyledPost","ArticleList_templateObject","h","w","react_infinite_scroller_default","threshold","loader","loadMore","hasMore","validData","element","checkData","localStorage","json","setItem","JSON","stringify","localData","i","parse","getItem","sort","b","MainPage","setData","article","setArticle","setPublicate","showArticle","handleRemove","removeItem","handlePublicate","editKey","post","newData","src_components_Article","components_ArticleList","App","src_components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e819ba78.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport \"./HandleArticle.css\"\r\nimport {validateArticle} from \"../actions/validate.js\"\r\n\r\nconst HandleArticle = (props) => {\r\n    const data = props.data || false\r\n    const key = props.value || null\r\n    const [head, setHead] = useState(data.head || \"\")\r\n    const [brief, setBrief] = useState(data.brief || \"\")\r\n    const [content, setContent] = useState(data.content || \"\")\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    //блокирует кнопку по результатам валидации\r\n    useEffect(() => {\r\n        setDisabled(validateArticle(head,brief,content))\r\n    }, [head.length, brief.length, content.length])\r\n\r\n    //добавляет в состояние данные из заполненных полей\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"head\" ? setHead(target.value) :\r\n        name === \"brief\" ? setBrief(target.value) :\r\n        setContent(target.value)\r\n    }\r\n\r\n    //отправляет в MainPage данные для публикации\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.publicate(head, brief, content, key, data.comments)\r\n        props.close()\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        return e.key === \"Enter\" ? e.preventDefault() : null\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <form>\r\n                <button onClick={props.close}><i className=\"material-icons\">arrow_back</i></button>\r\n                <textarea   id=\"head\"\r\n                            minLength=\"5\"\r\n                            maxLength=\"50\"\r\n                            name=\"head\"\r\n                            cols=\"50\" \r\n                            rows=\"1\"\r\n                            placeholder=\"Заголовок, 5-50 символов\"\r\n                            value={head}\r\n                            onChange={handleChange}\r\n                            onKeyPress={handleKeyPress}>\r\n                </textarea>\r\n                <textarea   id=\"brief\"\r\n                            minLength=\"10\"\r\n                            maxLength=\"200\"\r\n                            name=\"brief\" \r\n                            cols=\"100\" \r\n                            rows=\"2\"\r\n                            placeholder=\"Краткое описание, 10-200 символов\"\r\n                            value={brief}\r\n                            onChange={handleChange}\r\n                            onKeyPress={handleKeyPress}>\r\n                </textarea>\r\n                <textarea   id=\"content\"\r\n                            minLength=\"150\"\r\n                            maxLength=\"2000\"\r\n                            name=\"content\"\r\n                            cols=\"100\" \r\n                            rows=\"20\"\r\n                            placeholder=\"Основной контент, 150-2000 символов\"\r\n                            value={content}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <button disabled={disabled} onClick={handleSubmit}><i className=\"material-icons\">add_circle</i></button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HandleArticle","export const validateArticle = (head, brief, content) => {\r\n    return !(\r\n        head.length >= 5 && head.length <= 50 &&\r\n        brief.length >= 10 && brief.length <= 200 &&\r\n        content.length >= 150 && content.length <= 2000\r\n        )\r\n}\r\n\r\nexport const validateComment = (author, comment) => {\r\n    return !(\r\n        author.length >=2 && author.length <= 30 &&\r\n        comment.length >=5 && comment.length <= 150\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport \"./Article.css\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport {validateComment} from \"../actions/validate.js\"\r\nimport styled from \"styled-components\"\r\nimport {TransitionMotion, spring} from 'react-motion'\r\n\r\nconst Article = (props) => {\r\n    const data = props.data.data\r\n    const key = props.data.key\r\n    const comments = data.comments\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n\r\n    //блокирует кнопку добавления комментария\r\n    useEffect(() => {\r\n        setDisabled(validateComment(author, text))\r\n    }, [text.length, author.length])\r\n\r\n    //добавляет данные из полей в состояние\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"author\" ? setAuthor(target.value) :\r\n        setText(target.value)\r\n    }\r\n\r\n    //отправляет комментарий в MainPage и очищает поля\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault()\r\n        const comment = {\r\n            key: Date.now() + [],\r\n            author: author,\r\n            comment: text\r\n        }\r\n        comments.push(comment)\r\n        props.publicate(data.head, data.brief, data.content, key, comments)\r\n        setAuthor(\"\")\r\n        setText(\"\")\r\n    }\r\n\r\n    //удаляет комментарии\r\n    const removeComment = (e) => {\r\n        const target = e.target\r\n        const value = target.value\r\n        const newComments = comments.filter(el => el.key !== value)\r\n        props.publicate(data.head, data.brief, data.content, key, newComments)\r\n    }\r\n\r\n    const handleKeyPress = (e) => {\r\n        return e.key === \"Enter\" ? e.preventDefault() : null\r\n    }\r\n\r\n    const Comments = ({className, children}) => {\r\n        return (<div className={className}>{children}</div>)\r\n    }\r\n\r\n    const StyledComments = styled(Comments)`opacity: ${props=>props.style.opacity}`\r\n\r\n    const willLeave = () => {\r\n        return {opacity: spring(0)}\r\n    }\r\n\r\n    const willEnter = () => {\r\n        return {opacity: 0}\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className=\"close\" onClick={() => props.selector(null)}><i className=\"material-icons\">arrow_back</i></button>\r\n        \r\n        <article className=\"open\">\r\n            <button className=\"remove\" onClick={()=>props.remover(key)}><i className=\"material-icons\">delete_outline</i></button>\r\n            {editPost ? null : <button className=\"edit\" onClick={()=>setEditPost(true)}><i className=\"material-icons\">edit</i></button>}\r\n            <div className=\"head\">{data.head}</div>\r\n            <div className=\"content\">{data.content}</div>\r\n        </article>\r\n\r\n        <div className=\"comments\">\r\n            <div className=\"comments-count\">Комментарии: {comments.length}</div>\r\n\r\n            <TransitionMotion\r\n                willEnter={willEnter}\r\n                willLeave={willLeave}\r\n                styles={comments.map(item => ({\r\n                    key: item.key + [],\r\n                    style: {opacity: spring(1)},\r\n                    data: item,\r\n                }))}>\r\n                {interpolatedStyles  =>\r\n                    <>\r\n                    {interpolatedStyles.map(config => {\r\n                        return (\r\n                            <StyledComments className=\"comment\" key={config.key} style={config.style}>\r\n                                <button className=\"remove-comment\" value={config.key} onClick={removeComment}>Х</button>\r\n                                <div className=\"author\">{config.data.author}</div>\r\n                                <div className=\"content\">{config.data.comment}</div>\r\n                            </StyledComments>\r\n                        )})}\r\n                    </>\r\n                }\r\n            </TransitionMotion>\r\n\r\n            <form id=\"add-comment\" onSubmit={handleSubmitComment}>\r\n                Добавить комментарий\r\n                <textarea   name=\"author\"\r\n                            cols=\"50\"\r\n                            rows=\"1\"\r\n                            placeholder=\"Имя\"\r\n                            minLength=\"2\"\r\n                            maxLength=\"30\"\r\n                            value={author}\r\n                            onChange={handleChange}\r\n                            onKeyPress={handleKeyPress}>\r\n                </textarea>\r\n                <textarea   name=\"text\"\r\n                            cols=\"50\"\r\n                            rows=\"3\"\r\n                            minLength=\"5\"\r\n                            maxLength=\"150\"\r\n                            value={text}\r\n                            placeholder=\"Комментарий\"\r\n                            onChange={handleChange}\r\n                            onKeyPress={handleKeyPress}>\r\n                </textarea>\r\n                <input      type=\"submit\" \r\n                            value=\"ОТПРАВИТЬ\"\r\n                            name=\"submit\"\r\n                            placeholder=\"Заголовок\" disabled={disabled}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n        {editPost ? <HandleArticle data={data} publicate={props.publicate} close={()=>setEditPost(false)} value={key}/>: null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article","import React, {useState, useEffect} from \"react\"\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\nimport {TransitionMotion, spring} from 'react-motion'\r\nimport styled from \"styled-components\"\r\n\r\n\r\nconst ArticleList = (props) => {\r\n    const data = props.data\r\n    const [loadPostsCount, setLoadPostsCount] = useState(5)\r\n    const [loadPostsData, setLoadPostsData] = useState(data.slice(0, loadPostsCount))\r\n\r\n    //обновляет список постов, при добавлении, удалении или подгрузке новых\r\n    useEffect(() => {\r\n        setLoadPostsData(data.slice(0, loadPostsCount))\r\n    }, [data.length, loadPostsCount])\r\n\r\n    //фейковая задержка загрузки новостей\r\n    const handleNext = () => {\r\n        setTimeout(() => {\r\n            setLoadPostsCount(loadPostsCount + 5)\r\n        }, 1500);\r\n    }\r\n\r\n    const Post = ({className, children}) => {\r\n        return (<article className={className}>{children}</article>)\r\n    }\r\n\r\n    const StyledPost = styled(Post)`height: ${props=>props.style.h}px;\r\n    margin-bottom: -${props=>props.style.w}px`\r\n\r\n    const willLeave = () => {\r\n        return {h: spring(0), w: spring(31)}\r\n    }\r\n\r\n    const willEnter = () => {\r\n        return {h: 0, w: 0}\r\n    }\r\n\r\n    return (\r\n            <TransitionMotion\r\n                willEnter={willEnter}\r\n                willLeave={willLeave}\r\n                styles={loadPostsData.map(item => ({\r\n                    key: item.key + [],\r\n                    style: {h: spring(150), w: spring(0)},\r\n                    data: item.data,\r\n                }))}>\r\n                {interpolatedStyles  =>\r\n                    <InfiniteScroll\r\n                    threshold={100}\r\n                    loader={\r\n                        <div className=\"spinner\" key=\"a\">\r\n                            <div className=\"bounce1\"></div>\r\n                            <div className=\"bounce2\"></div>\r\n                            <div className=\"bounce3\"></div>\r\n                        </div>}\r\n                    loadMore={handleNext}\r\n                    hasMore={loadPostsCount <= data.length}\r\n                    >\r\n                    {interpolatedStyles.map(config => {\r\n                        return (\r\n                            <StyledPost key={config.key} style={config.style}>\r\n                                <div className=\"article-wrap\" onClick={()=>{props.selector(config.key)}}>\r\n                                    <div className=\"head\">{config.data.head}</div>\r\n                                    <div className=\"comments-count\"><i className=\"material-icons\">comment</i> {config.data.comments.length}</div>\r\n                                    <div className=\"brief\">{config.data.brief}</div>\r\n                                </div>\r\n                            </StyledPost>\r\n                        )})}\r\n                    </InfiniteScroll>}\r\n            </TransitionMotion>\r\n        \r\n    )\r\n}\r\n\r\nexport default ArticleList","import json from \"../data/data.json\"\r\n\r\n//проверка наличия данных в localStorage\r\n\r\nconst validData = (element) => {\r\n    return (\r\n    typeof element === \"object\" &&\r\n    \"key\" in element && \r\n    \"data\" in element &&\r\n    \"head\" in element.data &&\r\n    \"comments\" in element.data &&\r\n    \"brief\" in element.data &&\r\n    \"content\" in element.data\r\n    )\r\n}\r\n\r\nconst checkData = () => {\r\n\r\n    if (localStorage.length === 0) {\r\n        json.map(element => localStorage.setItem(element.key, JSON.stringify(element)))\r\n    }\r\n        \r\n    const localData = []\r\n    let element\r\n    for(let i = 0; i < localStorage.length; i++) {\r\n        element = JSON.parse(localStorage.getItem(localStorage.key(i)))\r\n        if (validData(element)) {\r\n            localData[i] = element\r\n        } else {\r\n            continue\r\n        }\r\n    }\r\n    return localData.sort((a,b)=>{\r\n        return a.key < b.key ? 1 :\r\n        a.key > b.key ? -1 : 0})\r\n}\r\n\r\nexport default checkData","import React, {useState} from 'react';\r\nimport Article from \"./Article\"\r\nimport ArticleList from \"./ArticleList\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport localData from \"../actions/checkData\"\r\nimport \"./MainPage.css\"\r\n\r\nconst MainPage = () => {\r\n    const [data, setData] = useState(localData)\r\n    const [article, setArticle] = useState(null)\r\n    const [publicate, setPublicate] = useState(false)\r\n\r\n    //показывает отдельную статью полностью\r\n    const showArticle = (key) => {\r\n        setArticle(key)\r\n    }\r\n\r\n    //удаляет статью\r\n    const handleRemove = (key) => {\r\n        localStorage.removeItem(key)\r\n        setData(localData)\r\n        setArticle(null)\r\n    }\r\n\r\n    //обновляет существующую или добавляет новую статью в \r\n    //зависимости от наличия editKey\r\n    const handlePublicate = (head, brief, content, editKey, comments) => {\r\n        const key = editKey ? editKey : Date.now()\r\n        const post = {\r\n            key: key,\r\n            data:{\r\n                head: head,\r\n                brief: brief,\r\n                content: content,\r\n                comments: comments || []\r\n        }}\r\n        \r\n        localStorage.setItem(key, JSON.stringify(post))\r\n        const newData = localData()\r\n        setData(newData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n            <div className=\"logo\">БЛОГ</div>\r\n            {!publicate ? <button onClick={()=>setPublicate(true)}><i className=\"material-icons\">add_circle</i></button> : null}\r\n        </header>\r\n        <main>\r\n            {article !== null ? \r\n                <Article \r\n                    selector={showArticle} \r\n                    publicate={handlePublicate} \r\n                    remover={handleRemove} \r\n                    data={JSON.parse(localStorage.getItem(article))}/> : \r\n                <ArticleList   \r\n                    remover={handleRemove}  \r\n                    selector={showArticle} \r\n                    data={data}/>}\r\n            {publicate ?  \r\n                <HandleArticle \r\n                    publicate={handlePublicate} \r\n                    close={()=>setPublicate(false)}/> : \r\n                    null}\r\n           \r\n        </main>\r\n        </>\r\n    )\r\n}\r\nexport default MainPage","import React from 'react';\nimport './App.css';\nimport MainPage from \"./components/MainPage\"\n\nconst App = () => {\n  return (\n    <>\n      <MainPage/>\n    </>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}