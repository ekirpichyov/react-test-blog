{"version":3,"sources":["components/HandleArticle.js","actions/validate.js","components/Article.js","components/ArticleList.js","actions/checkData.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["HandleArticle","props","data","key","value","_useState","useState","head","_useState2","Object","slicedToArray","setHead","_useState3","brief","_useState4","setBrief","_useState5","content","_useState6","setContent","_useState7","_useState8","disabled","setDisabled","handleChange","e","target","name","length","validateArticle","react_default","a","createElement","className","onSubmit","preventDefault","publicate","comments","close","onClick","cols","rows","placeholder","onChange","type","Article","editPost","setEditPost","author","setAuthor","text","setText","comment","validateComment","removeComment","newComments","filter","el","Fragment","selector","remover","map","item","id","Date","now","push","src_components_HandleArticle","ArticleList","loadPostsCount","setLoadPostsCount","slice","loadPostsData","setLoadPostsData","useEffect","react_infinite_scroller_default","loadMore","hasMore","element","checkData","localStorage","json","setItem","JSON","stringify","localData","i","parse","getItem","reverse","MainPage","setData","article","setArticle","setPublicate","showArticle","handlePublicate","editKey","post","newData","src_components_Article","removeItem","components_ArticleList","App","src_components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6ec698b1.chunk.js","sourcesContent":["import React, {useState} from \"react\"\r\nimport \"./HandleArticle.css\"\r\nimport {validateArticle} from \"../actions/validate.js\"\r\n\r\nconst HandleArticle = (props) => {\r\n    const data = props.data || false\r\n    const key = props.value || null\r\n    const [head, setHead] = useState(data.head || \"\")\r\n    const [brief, setBrief] = useState(data.brief || \"\")\r\n    const [content, setContent] = useState(data.content || \"\")\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"head\" ? setHead(target.value) :\r\n        name === \"brief\" ? setBrief(target.value) :\r\n        setContent(target.value)\r\n        \r\n        setDisabled(validateArticle(head,brief,content))\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.publicate(head, brief, content, key, data.comments)\r\n        props.close()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <form onSubmit={handleSubmit}>\r\n                <button onClick={props.close}><i className=\"fas fa-arrow-left\"></i> Назад</button>\r\n                <textarea   name=\"head\"\r\n                            cols=\"50\" \r\n                            rows=\"1\"\r\n                            placeholder=\"Заголовок, 5-50 символов\"\r\n                            value={head}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   name=\"brief\" \r\n                            cols=\"50\" \r\n                            rows=\"4\"\r\n                            placeholder=\"Краткое описание, 10-200 символов\"\r\n                            value={brief}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   name=\"content\"\r\n                            cols=\"100\" \r\n                            rows=\"20\"\r\n                            placeholder=\"Основной контент, 150-2000 символов\"\r\n                            value={content}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <input      type=\"submit\" \r\n                            name=\"head\"\r\n                            disabled={disabled}>\r\n                </input>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HandleArticle","export const validateArticle = (head, brief, content) => {\r\n    return !(\r\n    head.length >= 5 && head.length <= 50 &&\r\n    brief.length >= 10 && brief.length <= 200 &&\r\n    content.length >= 150 && content.length <= 2000\r\n    )\r\n}\r\n\r\nexport const validateComment = (author, comment) => {\r\n    return !(\r\n        author.length >=2 && author.length <= 20 &&\r\n        comment.length >=5 && author.length <= 150\r\n    )\r\n}\r\n","import React, {useState} from \"react\"\r\nimport \"./Article.css\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport {validateComment} from \"../actions/validate.js\"\r\n\r\nconst Article = (props) => {\r\n    const data = props.data.data\r\n    const key = props.data.key\r\n    const comments = data.comments\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"author\" ? setAuthor(target.value) :\r\n        setText(target.value)\r\n        setDisabled(validateComment(author, text))\r\n    }\r\n\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault()\r\n        const comment = {\r\n            key: Date.now() + [],\r\n            author: author,\r\n            comment: text\r\n        }\r\n        comments.push(comment)\r\n        props.publicate(data.head, data.brief, data.content, key, comments)\r\n        setAuthor(\"\")\r\n        setText(\"\")\r\n    }\r\n\r\n    const removeComment = (e) => {\r\n        const target = e.target\r\n        const value = target.value\r\n        const newComments = comments.filter(el => el.key !== value)\r\n        props.publicate(data.head, data.brief, data.content, key, newComments)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className=\"close\" onClick={() => props.selector(null)}><i className=\"fas fa-arrow-left\"> Назад</i></button>\r\n        <button className=\"remove\" onClick={()=>props.remover(key)}><i className=\"fas fa-trash-alt\"></i></button>\r\n        <button className=\"edit\" onClick={()=>setEditPost(true)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n        \r\n        <article className=\"open\">\r\n            <div className=\"head\">{data.head}</div>\r\n            <div className=\"content\">{data.content}</div>\r\n        </article>\r\n\r\n        <div className=\"comments\">\r\n            <div className=\"comments-count\">Комментариев: {comments.length}</div>\r\n            {comments.map(item => \r\n                <div className=\"comment\" key={item.key}>\r\n                    <button className=\"remove-comment\" value={item.key} onClick={removeComment}>Х</button>\r\n                    <div className=\"author\">{item.author}</div>\r\n                    <div className=\"content\">{item.comment}</div>\r\n                </div>\r\n            )}\r\n\r\n            <form id=\"add-comment\" onSubmit={handleSubmitComment}>\r\n                Добавить комментарий\r\n                <textarea   name=\"author\"\r\n                            cols=\"50\"\r\n                            rows=\"1\"\r\n                            placeholder=\"Ваше имя\"\r\n                            value={author}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   name=\"text\"\r\n                            cols=\"50\"\r\n                            rows=\"3\"\r\n                            value={text}\r\n                            placeholder=\"Комментарий\"\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <input      type=\"submit\" \r\n                            value=\"Отправить\"\r\n                            name=\"submit\"\r\n                            placeholder=\"Заголовок\" disabled={disabled}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n        {editPost ? <HandleArticle data={data} publicate={props.publicate} close={()=>setEditPost(false)} value={key}/>: null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article","import React, {useState, useEffect} from \"react\"\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\n\r\n\r\nconst ArticleList = (props) => {\r\n    const data = props.data\r\n    \r\n    const [loadPostsCount, setLoadPostsCount] = useState(5)\r\n    const [loadPostsData, setLoadPostsData] = useState(data.slice(0, loadPostsCount))\r\n\r\n    useEffect(() => {\r\n        setLoadPostsData(data.slice(0, loadPostsCount))\r\n    }, [data.length, loadPostsCount])\r\n\r\n    const handleNext = () => {\r\n        setLoadPostsCount(loadPostsCount + 5)\r\n    }\r\n\r\n    const Posts = () => {\r\n        return (\r\n            <>\r\n            {loadPostsData.map(element => \r\n                <article key={element.key}>\r\n                    <div className=\"head\" onClick={()=>{props.selector(element.key)}}>{element.data.head}</div>\r\n                    <div className=\"comments-count\">Комментариев: {element.data.comments.length}</div>\r\n                    <div className=\"brief\">{element.data.brief}</div>\r\n                </article>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            loadMore={handleNext}\r\n            hasMore={loadPostsCount <= data.length}\r\n        >\r\n            <Posts/>\r\n        </InfiniteScroll>\r\n    )\r\n}\r\n\r\nexport default ArticleList","import json from \"../data/data.json\"\r\n\r\n//проверка наличия данных в localStorage\r\n\r\nconst checkData = () => {\r\n    if (localStorage.length === 0) {\r\n        json.map(element => localStorage.setItem(element.key, JSON.stringify(element)))\r\n    }\r\n        \r\n    const localData = []\r\n    for(let i = 0; i < localStorage.length; i++) {\r\n        localData[i] = JSON.parse(localStorage.getItem(localStorage.key(i)))\r\n    }\r\n    return localData.reverse()\r\n}\r\n\r\nexport default checkData","import React, {useState} from 'react';\r\nimport Article from \"./Article\"\r\nimport ArticleList from \"./ArticleList\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport localData from \"../actions/checkData\"\r\nimport \"./MainPage.css\"\r\n\r\nconst MainPage = () => {\r\n    const [data, setData] = useState(localData)\r\n    const [article, setArticle] = useState(null)\r\n    const [publicate, setPublicate] = useState(false)\r\n\r\n    const showArticle = (key) => {\r\n        setArticle(key)\r\n    }\r\n\r\n    const handleRemove = (value) => {\r\n        localStorage.removeItem(value)\r\n        setData(localData)\r\n        setArticle(null)\r\n    }\r\n\r\n    const handlePublicate = (head, brief, content, editKey, comments) => {\r\n        const key = editKey ? editKey : Date.now()\r\n        const post = {\r\n            key: key,\r\n            data:{\r\n                head: head,\r\n                brief: brief,\r\n                content: content,\r\n                comments: comments || []\r\n        }}\r\n        \r\n        localStorage.setItem(key, JSON.stringify(post))\r\n        const newData = localData()\r\n        setData(newData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n            <div className=\"logo\">БЛОГ</div>\r\n            <button onClick={()=>setPublicate(true)}><i className=\"fas fa-plus\"></i> Написать</button>\r\n        </header>\r\n        <main>\r\n            {article !== null ? \r\n                <Article \r\n                    selector={showArticle} \r\n                    publicate={handlePublicate} \r\n                    remover={handleRemove} \r\n                    data={JSON.parse(localStorage.getItem(article))}/> : \r\n                <ArticleList   \r\n                    selector={showArticle} \r\n                    data={data}/>}\r\n            {publicate ?  \r\n                <HandleArticle \r\n                    publicate={handlePublicate} \r\n                    close={()=>setPublicate(false)}/> : \r\n                    null}\r\n           \r\n        </main>\r\n        </>\r\n    )\r\n}\r\nexport default MainPage","import React from 'react';\nimport './App.css';\nimport MainPage from \"./components/MainPage\"\n\nconst App = () => {\n  return (\n    <>\n      <MainPage/>\n    </>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}