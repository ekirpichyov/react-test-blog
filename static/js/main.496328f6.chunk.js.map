{"version":3,"sources":["components/HandleArticle.js","actions/validate.js","components/Article.js","components/ArticleList.js","actions/checkData.js","components/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["HandleArticle","props","data","key","value","_useState","useState","head","_useState2","Object","slicedToArray","setHead","_useState3","brief","_useState4","setBrief","_useState5","content","_useState6","setContent","_useState7","_useState8","disabled","setDisabled","useEffect","$","validate","rules","minlength","maxlength","messages","length","validateArticle","handleChange","e","target","name","react_default","a","createElement","className","onSubmit","preventDefault","publicate","comments","close","onClick","id","cols","rows","placeholder","onChange","type","Article","editPost","setEditPost","author","setAuthor","text","setText","comment","validateComment","removeComment","newComments","filter","el","Fragment","selector","remover","map","item","Date","now","push","src_components_HandleArticle","ArticleList","loadPostsCount","setLoadPostsCount","slice","loadPostsData","setLoadPostsData","react_infinite_scroller_default","loadMore","hasMore","element","validData","checkData","localStorage","json","setItem","JSON","stringify","localData","i","parse","getItem","sort","b","MainPage","setData","article","setArticle","setPublicate","showArticle","handlePublicate","editKey","post","newData","src_components_Article","removeItem","components_ArticleList","App","src_components_MainPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.496328f6.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport \"./HandleArticle.css\"\r\nimport {validateArticle} from \"../actions/validate.js\"\r\n\r\nconst HandleArticle = (props) => {\r\n    const data = props.data || false\r\n    const key = props.value || null\r\n    const [head, setHead] = useState(data.head || \"\")\r\n    const [brief, setBrief] = useState(data.brief || \"\")\r\n    const [content, setContent] = useState(data.content || \"\")\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    //блокирует кнопку по результатам валидации\r\n    useEffect(() => {\r\n        setDisabled(validateArticle(head,brief,content))\r\n    }, [head.length, brief.length, content.length])\r\n\r\n    //добавляет в состояние данные из заполненных полей\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"head\" ? setHead(target.value) :\r\n        name === \"brief\" ? setBrief(target.value) :\r\n        setContent(target.value)\r\n    }\r\n\r\n    //отправляет в MainPage данные для публикации\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        props.publicate(head, brief, content, key, data.comments)\r\n        props.close()\r\n    }\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <form onSubmit={handleSubmit}>\r\n                <button onClick={props.close}><i className=\"fas fa-arrow-left\"></i> Назад</button>\r\n                <textarea   id=\"head\"\r\n                            name=\"head\"\r\n                            cols=\"50\" \r\n                            rows=\"1\"\r\n                            placeholder=\"Заголовок, 5-50 символов\"\r\n                            value={head}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   id=\"brief\"\r\n                            name=\"brief\" \r\n                            cols=\"50\" \r\n                            rows=\"4\"\r\n                            placeholder=\"Краткое описание, 10-200 символов\"\r\n                            value={brief}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   id=\"content\"\r\n                            name=\"content\"\r\n                            cols=\"100\" \r\n                            rows=\"20\"\r\n                            placeholder=\"Основной контент, 150-2000 символов\"\r\n                            value={content}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <input      type=\"submit\"\r\n                            value=\"Отправить\"\r\n                            name=\"head\"\r\n                            disabled={disabled}>\r\n                </input>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HandleArticle","import $ from \"jquery\"\r\nimport validate from 'jquery-validation'\r\n\r\nexport const validateArticle = (head, brief, content) => {\r\n    $(\".popup form\").validate({\r\n        rules: {\r\n            head: {\r\n                minlength: 5,\r\n                maxlength: 50\r\n            },\r\n            brief: {\r\n                minlength: 10,\r\n                maxlength: 200\r\n            },\r\n            content: {\r\n                minlength: 150,\r\n                maxlength: 2000\r\n            }\r\n        },\r\n        messages: {\r\n            head: {\r\n                minlength: \"Не менее 5 символов\",\r\n                maxlength: \"Не более 50 символов\"\r\n            },\r\n            brief: {\r\n                minlength: \"Не менее 10 символов\",\r\n                maxlength: \"Не более 200 символов\"\r\n            },\r\n            content: {\r\n                minlength: \"Не менее 150 символов\",\r\n                maxlength: \"Не более 200 символов\"\r\n            }\r\n        }\r\n    })\r\n\r\n    return !(\r\n        head.length >= 5 && head.length <= 50 &&\r\n        brief.length >= 10 && brief.length <= 200 &&\r\n        content.length >= 150 && content.length <= 2000\r\n        )\r\n}\r\n\r\nexport const validateComment = (author, comment) => {\r\n    return !(\r\n        author.length >=2 && author.length <= 30 &&\r\n        comment.length >=5 && author.length <= 150\r\n    )\r\n}\r\n","import React, {useState, useEffect} from \"react\"\r\nimport \"./Article.css\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport {validateComment} from \"../actions/validate.js\"\r\n\r\nconst Article = (props) => {\r\n    const data = props.data.data\r\n    const key = props.data.key\r\n    const comments = data.comments\r\n    const [editPost, setEditPost] = useState(false)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [text, setText] = useState(\"\")\r\n\r\n    //блокирует кнопку добавления комментария\r\n    useEffect(() => {\r\n        setDisabled(validateComment(author, text))\r\n    }, [text.length, author.length])\r\n\r\n    //добавляет данные из полей в состояние\r\n    const handleChange = (e) => {\r\n        const target = e.target\r\n        const name = target.name\r\n        name === \"author\" ? setAuthor(target.value) :\r\n        setText(target.value)\r\n    }\r\n\r\n    //отправляет комментарий в MainPage и очищает поля\r\n    const handleSubmitComment = (e) => {\r\n        e.preventDefault()\r\n        const comment = {\r\n            key: Date.now() + [],\r\n            author: author,\r\n            comment: text\r\n        }\r\n        comments.push(comment)\r\n        props.publicate(data.head, data.brief, data.content, key, comments)\r\n        setAuthor(\"\")\r\n        setText(\"\")\r\n    }\r\n\r\n    //удаляет комментарии\r\n    const removeComment = (e) => {\r\n        const target = e.target\r\n        const value = target.value\r\n        const newComments = comments.filter(el => el.key !== value)\r\n        props.publicate(data.head, data.brief, data.content, key, newComments)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <button className=\"close\" onClick={() => props.selector(null)}><i className=\"fas fa-arrow-left\"> Назад</i></button>\r\n        <button className=\"remove\" onClick={()=>props.remover(key)}><i className=\"fas fa-trash-alt\"></i></button>\r\n        <button className=\"edit\" onClick={()=>setEditPost(true)}><i className=\"fas fa-pencil-alt\"></i></button>\r\n        \r\n        <article className=\"open\">\r\n            <div className=\"head\">{data.head}</div>\r\n            <div className=\"content\">{data.content}</div>\r\n        </article>\r\n\r\n        <div className=\"comments\">\r\n            <div className=\"comments-count\">Комментариев: {comments.length}</div>\r\n            {comments.map(item => \r\n                <div className=\"comment\" key={item.key}>\r\n                    <button className=\"remove-comment\" value={item.key} onClick={removeComment}>Х</button>\r\n                    <div className=\"author\">{item.author}</div>\r\n                    <div className=\"content\">{item.comment}</div>\r\n                </div>\r\n            )}\r\n\r\n            <form id=\"add-comment\" onSubmit={handleSubmitComment}>\r\n                Добавить комментарий\r\n                <textarea   name=\"author\"\r\n                            cols=\"50\"\r\n                            rows=\"1\"\r\n                            placeholder=\"Ваше имя\"\r\n                            value={author}\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <textarea   name=\"text\"\r\n                            cols=\"50\"\r\n                            rows=\"3\"\r\n                            value={text}\r\n                            placeholder=\"Комментарий\"\r\n                            onChange={handleChange}>\r\n                </textarea>\r\n                <input      type=\"submit\" \r\n                            value=\"Отправить\"\r\n                            name=\"submit\"\r\n                            placeholder=\"Заголовок\" disabled={disabled}>\r\n                </input>\r\n            </form>\r\n        </div>\r\n        {editPost ? <HandleArticle data={data} publicate={props.publicate} close={()=>setEditPost(false)} value={key}/>: null}\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Article","import React, {useState, useEffect} from \"react\"\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\n\r\n\r\nconst ArticleList = (props) => {\r\n    const data = props.data\r\n    \r\n    const [loadPostsCount, setLoadPostsCount] = useState(5)\r\n    const [loadPostsData, setLoadPostsData] = useState(data.slice(0, loadPostsCount))\r\n\r\n    //обновляет список постов, при добавлении, удалении или подгрузке новых\r\n    useEffect(() => {\r\n        setLoadPostsData(data.slice(0, loadPostsCount))\r\n    }, [data.length, loadPostsCount])\r\n\r\n    //подгружает новые посты\r\n    const handleNext = () => {\r\n        setLoadPostsCount(loadPostsCount + 5)\r\n    }\r\n\r\n    const Posts = () => {\r\n        return (\r\n            <>\r\n            {loadPostsData.map(element => \r\n                <article key={element.key}>\r\n                    <div className=\"head\" onClick={()=>{props.selector(element.key)}}>{element.data.head}</div>\r\n                    <div className=\"comments-count\">Комментариев: {element.data.comments.length}</div>\r\n                    <div className=\"brief\">{element.data.brief}</div>\r\n                </article>\r\n            )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <InfiniteScroll\r\n            loadMore={handleNext}\r\n            hasMore={loadPostsCount <= data.length}\r\n        >\r\n            <Posts/>\r\n        </InfiniteScroll>\r\n    )\r\n}\r\n\r\nexport default ArticleList","import json from \"../data/data.json\"\r\n\r\n//проверка наличия данных в localStorage\r\n\r\nconst validData = (element) => {\r\n    return (\r\n    typeof element === \"object\" &&\r\n    \"key\" in element && \r\n    \"data\" in element &&\r\n    \"head\" in element.data &&\r\n    \"comments\" in element.data &&\r\n    \"brief\" in element.data &&\r\n    \"content\" in element.data\r\n    )\r\n}\r\n\r\nconst checkData = () => {\r\n\r\n    if (localStorage.length === 0) {\r\n        json.map(element => localStorage.setItem(element.key, JSON.stringify(element)))\r\n    }\r\n        \r\n    const localData = []\r\n    let element\r\n    for(let i = 0; i < localStorage.length; i++) {\r\n        element = JSON.parse(localStorage.getItem(localStorage.key(i)))\r\n        if (validData(element)) {\r\n            localData[i] = element\r\n        } else {\r\n            continue\r\n        }\r\n    }\r\n    return localData.sort((a,b)=>{\r\n        return a.key < b.key ? 1 :\r\n        a.key > b.key ? -1 : 0})\r\n}\r\n\r\nexport default checkData","import React, {useState} from 'react';\r\nimport Article from \"./Article\"\r\nimport ArticleList from \"./ArticleList\"\r\nimport HandleArticle from \"./HandleArticle\"\r\nimport localData from \"../actions/checkData\"\r\nimport \"./MainPage.css\"\r\n\r\nconst MainPage = () => {\r\n    const [data, setData] = useState(localData)\r\n    const [article, setArticle] = useState(null)\r\n    const [publicate, setPublicate] = useState(false)\r\n\r\n    //показывает отдельную статью полностью\r\n    const showArticle = (key) => {\r\n        setArticle(key)\r\n    }\r\n\r\n    //удаляет статью\r\n    const handleRemove = (value) => {\r\n        localStorage.removeItem(value)\r\n        setData(localData)\r\n        setArticle(null)\r\n    }\r\n\r\n    //обновляет существующую или добавляет новую статью в \r\n    //зависимости от наличия editKey\r\n    const handlePublicate = (head, brief, content, editKey, comments) => {\r\n        const key = editKey ? editKey : Date.now()\r\n        const post = {\r\n            key: key,\r\n            data:{\r\n                head: head,\r\n                brief: brief,\r\n                content: content,\r\n                comments: comments || []\r\n        }}\r\n        \r\n        localStorage.setItem(key, JSON.stringify(post))\r\n        const newData = localData()\r\n        setData(newData)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n            <div className=\"logo\">БЛОГ</div>\r\n            <button onClick={()=>setPublicate(true)}><i className=\"fas fa-plus\"></i> Написать</button>\r\n        </header>\r\n        <main>\r\n            {article !== null ? \r\n                <Article \r\n                    selector={showArticle} \r\n                    publicate={handlePublicate} \r\n                    remover={handleRemove} \r\n                    data={JSON.parse(localStorage.getItem(article))}/> : \r\n                <ArticleList   \r\n                    selector={showArticle} \r\n                    data={data}/>}\r\n            {publicate ?  \r\n                <HandleArticle \r\n                    publicate={handlePublicate} \r\n                    close={()=>setPublicate(false)}/> : \r\n                    null}\r\n           \r\n        </main>\r\n        </>\r\n    )\r\n}\r\nexport default MainPage","import React from 'react';\nimport './App.css';\nimport MainPage from \"./components/MainPage\"\n\nconst App = () => {\n  return (\n    <>\n      <MainPage/>\n    </>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}